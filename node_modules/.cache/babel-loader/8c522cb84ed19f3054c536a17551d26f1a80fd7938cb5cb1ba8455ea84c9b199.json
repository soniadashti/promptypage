{"ast":null,"code":"/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\n  var MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSpinner'] = MaterialSpinner;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSpinner.prototype.Constant_ = {\n    MDL_SPINNER_LAYER_COUNT: 4\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n  };\n\n  /**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\n  MaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [leftClipper, gapPatch, rightClipper];\n    for (var i = 0; i < circleOwners.length; i++) {\n      var circle = document.createElement('div');\n      circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n      circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n  };\n  MaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n\n  /**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n  };\n  MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n\n  /**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n  };\n  MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n      for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n        this.createLayer(i);\n      }\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n  });\n})();","map":{"version":3,"names":["MaterialSpinner","element","element_","init","window","prototype","Constant_","MDL_SPINNER_LAYER_COUNT","CssClasses_","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","document","createElement","classList","add","leftClipper","gapPatch","rightClipper","circleOwners","i","length","circle","appendChild","stop","remove","start","componentHandler","register","constructor","classAsString","cssClass","widget"],"sources":["/Users/soniadashti/Desktop/Landing-Page/node_modules/material-design-lite/src/spinner/spinner.js"],"sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\n  var MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialSpinner'] = MaterialSpinner;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSpinner.prototype.Constant_ = {\n    MDL_SPINNER_LAYER_COUNT: 4\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n  };\n\n  /**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\n  MaterialSpinner.prototype.createLayer = function(index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\n    var circleOwners = [leftClipper, gapPatch, rightClipper];\n\n    for (var i = 0; i < circleOwners.length; i++) {\n      var circle = document.createElement('div');\n      circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n      circleOwners[i].appendChild(circle);\n    }\n\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n\n    this.element_.appendChild(layer);\n  };\n  MaterialSpinner.prototype['createLayer'] =\n      MaterialSpinner.prototype.createLayer;\n\n  /**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.stop = function() {\n    this.element_.classList.remove('is-active');\n  };\n  MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n\n  /**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\n  MaterialSpinner.prototype.start = function() {\n    this.element_.classList.add('is-active');\n  };\n  MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n\n  /**\n   * Initialize element.\n   */\n  MaterialSpinner.prototype.init = function() {\n    if (this.element_) {\n      for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n        this.createLayer(i);\n      }\n\n      this.element_.classList.add('is-upgraded');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n  });\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}